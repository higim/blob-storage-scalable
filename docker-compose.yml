version: '3.8'

services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/music
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - minio
      - kafka
      - redis
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:17
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=music
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

    kafka:
      image: apache/kafka:latest
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        - KAFKA_CFG_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
        - KAFKA_CFG_PROCESS_ROLES=broker,controller
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9092
        - KAFKA_CFG_NUM_PARTITIONS=1
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
        - ALLOW_PLAINTEXT_LISTENER=yes
      depends_on:
        - backend

  redis:
    image: redis:8
    container_name: redis
    ports:
      - "6379:6379"
  
  celery-worker:
    build: ./backend
    container_name: celery-worker
    command: celery -A app.celery_app worker --loglevel=info
    depends_on:
      - backend
      - redis
      - db
  
  celery-beat:
    build: ./backend
    container_name: celery-beat
    command: celery -A app.celery_app beat --loglevel=info
    depends_on:
      - backend
      - redis
      - db

volumes:
  db_data:
  minio_data: