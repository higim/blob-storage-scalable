services:

  client:
    build: ./client
    container_name: client
    depends_on:
      - backend
      - minio
    environment:
      - BACKEND_URL=http://localhost:8000

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/music
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://redis:6379/0
      - MINIO_BUCKET_NAME=music-bucket
    depends_on:
      - db
      - minio
      - kafka
      - redis
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:17
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=music
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      # Kafka notification settings
      - MINIO_NOTIFY_KAFKA_ENABLE_PRIMARY=on
      - MINIO_NOTIFY_KAFKA_BROKERS_PRIMARY=kafka:9092
      - MINIO_NOTIFY_KAFKA_TOPIC_PRIMARY=new_file
      # Allow connecting outside docker network
      - MINIO_SERVER_URL=http://localhost:9000
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
    - KAFKA_PROCESS_ROLES=broker,controller
    - KAFKA_NODE_ID=1
    - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
    - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093 #
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/var/lib/kafka/data

  redis:
    image: redis:8
    container_name: redis
    ports:
      - "6379:6379"
  
  # celery-worker:
  #   build: ./backend
  #   container_name: celery-worker
  #   command: celery -A app.celery_app worker --loglevel=info
  #   depends_on:
  #     - backend
  #     - redis
  #     - db
  
  # celery-beat:
  #   build: ./backend
  #   container_name: celery-beat
  #   command: celery -A app.celery_app beat --loglevel=info
  #   depends_on:
  #     - backend
  #     - redis
      # - db

volumes:
  db_data:
  minio_data:
  kafka_data: